C51 COMPILER V9.56.0.0   SERIAL                                                            03/17/2019 14:30:50 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\list\serial.obj
COMPILER INVOKED BY: E:\keil_c51\C51\BIN\C51.EXE hal\serial.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -list\serial.lst) TABS(2) OBJECT(.\list\serial.obj)

line level    source

   1          #include "serial.h"
   2          
   3          #define MAX_SERIAL_CB_FUN (3)
   4          
   5          typedef struct s_serialCbFunCfg{
   6            
   7            uint8 serialx;
   8            serialEvnCbFun_t serialxEvnCbFun;
   9            
  10          }s_serialCbFunCfg;
  11          
  12          typedef struct s_serialCbFunQue{
  13            
  14            uint8 head;
  15            uint8 tail;
  16            
  17          }s_serialCbFunQue;
  18          
  19          static s_serialCbFunQue G_serialCbFunQue = {0, MAX_SERIAL_CB_FUN-1};
  20          
  21          s_serialCbFunCfg G_serialEvnCbFuns[MAX_SERIAL_CB_FUN] = {{0,NULL}, {0,NULL}, {0,NULL}};
  22          
  23          
  24          int8 registSerialCbFun(uint8 serialx, serialEvnCbFun_t cb)
  25          {
  26   1        if((G_serialCbFunQue.tail+1)%MAX_SERIAL_CB_FUN == G_serialCbFunQue.head){
  27   2        
  28   2           // queue full
  29   2           return -1;
  30   2        }
  31   1        
  32   1        G_serialCbFunQue.tail = (G_serialCbFunQue.tail+1)%MAX_SERIAL_CB_FUN;
  33   1        G_serialEvnCbFuns[G_serialCbFunQue.tail].serialx = serialx;
  34   1        G_serialEvnCbFuns[G_serialCbFunQue.tail].serialxEvnCbFun = cb;
  35   1        return G_serialCbFunQue.tail;
  36   1      }
  37          
  38          int8 unregistSerialCbFun(int8 cb_FunID)
  39          {
  40   1      
  41   1        if((G_serialCbFunQue.head+1)%MAX_SERIAL_CB_FUN == G_serialCbFunQue.tail){
  42   2        
  43   2           // queue empty
  44   2           return -1;
  45   2        }
  46   1        
  47   1        G_serialEvnCbFuns[cb_FunID].serialx = 0;
  48   1        G_serialEvnCbFuns[cb_FunID].serialxEvnCbFun = NULL;
  49   1        return 0;
  50   1      }
  51          
  52          int8 initSeriaX(SERIA_X seriaIndex, s_SeriaParam *param)
  53          {
  54   1        return 0;
C51 COMPILER V9.56.0.0   SERIAL                                                            03/17/2019 14:30:50 PAGE 2   

  55   1      }
*** WARNING C280 IN LINE 52 OF hal\serial.c: 'seriaIndex': unreferenced local variable
*** WARNING C280 IN LINE 52 OF hal\serial.c: 'param': unreferenced local variable
  56          
  57          int8 uninitSeriaX(SERIA_X seriaIndex)
  58          {
  59   1      
  60   1        return 0;
  61   1      }
*** WARNING C280 IN LINE 57 OF hal\serial.c: 'seriaIndex': unreferenced local variable
  62          
  63          int32 serialRead(SERIA_X index, int8 *buff, int32 readSize, int32 timeOut)
  64          {
  65   1      
  66   1        return 0;
  67   1      }
*** WARNING C280 IN LINE 63 OF hal\serial.c: 'index': unreferenced local variable
*** WARNING C280 IN LINE 63 OF hal\serial.c: 'buff': unreferenced local variable
*** WARNING C280 IN LINE 63 OF hal\serial.c: 'readSize': unreferenced local variable
*** WARNING C280 IN LINE 63 OF hal\serial.c: 'timeOut': unreferenced local variable
  68          
  69          int32 serialWrite(SERIA_X index, int8 *buff, int32 writeSize, int32 timeOut)
  70          {
  71   1      
  72   1        return 0;
  73   1      }
*** WARNING C280 IN LINE 69 OF hal\serial.c: 'index': unreferenced local variable
*** WARNING C280 IN LINE 69 OF hal\serial.c: 'buff': unreferenced local variable
*** WARNING C280 IN LINE 69 OF hal\serial.c: 'writeSize': unreferenced local variable
*** WARNING C280 IN LINE 69 OF hal\serial.c: 'timeOut': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    212    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     28      26
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  11 WARNING(S),  0 ERROR(S)
