C51 COMPILER V9.56.0.0   HW_PWM                                                            03/24/2019 22:53:31 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE HW_PWM
OBJECT MODULE PLACED IN .\list\hw_pwm.obj
COMPILER INVOKED BY: E:\keil_c51\C51\BIN\C51.EXE driver\51\hw_pwm.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\list\hw_pwm.lst) TABS(2) OBJECT(.\list\hw_pwm.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          /*************  功能说明  **************
  15          
  16          本文件为STC8xxx系列的端口初始化程序,用户几乎可以不修改这个程序.
  17          
  18          
  19          ******************************************/
  20          
  21          #include "hw_pwm.h"
  22          #include "hal/timer.h"
  23          #include "hal/pinCtl.h"
  24          #include "driver/51/hw_timer.h"
  25          #include "driver/51/hw_serial.h"
  26          #include <stdio.h>
  27          
  28          static uint16 G_ServoPulCnt = 0;
  29          static uint16 G_ServoPulseWidth = 15;
  30          static uint8 G_ServoCtlPin = 0;
  31          
  32          void resetServoPulCnt()
  33          {
  34   1        G_ServoPulCnt = 0;
  35   1      }
  36          
  37          void setServoPulseWidth(uint16 cnt)
  38          {
  39   1        G_ServoPulseWidth = cnt;
  40   1      }
  41          
  42          void setServoCtlPin(uint8 pin)
  43          {
  44   1        G_ServoCtlPin = pin;
  45   1      }
  46          
  47          
  48          void ServoPwmInterruptProc(TIME_X timerx)
  49          {
  50   1        #if 1
  51   1        static u32 timeCnt = 0;
  52   1        timeCnt++;
  53   1      
  54   1        if(timeCnt > 10000){
C51 COMPILER V9.56.0.0   HW_PWM                                                            03/24/2019 22:53:31 PAGE 2   

  55   2        
  56   2          //digitalWrite_common(G_ServoCtlPin, LOW);
  57   2          
  58   2        }else{
  59   2        
  60   2          //digitalWrite_common(G_ServoCtlPin, HIGH);
  61   2        }
  62   1        
  63   1        if(timeCnt > 20000){
  64   2        
  65   2          timeCnt = 0;
  66   2        }
  67   1        
  68   1        #endif
  69   1        
  70   1        //printf("%d,%d,%d\r\n", (short)G_ServoPulseWidth, (short)G_ServoPulCnt, (unsigned int)timeCnt);
  71   1        if(G_ServoPulCnt <= G_ServoPulseWidth){
  72   2        
  73   2          digitalWrite_common(G_ServoCtlPin, HIGH);
  74   2          //PrintString1("H\r\n");
  75   2        }else{
  76   2        
  77   2          digitalWrite_common(G_ServoCtlPin, LOW);
  78   2          //PrintString1("L\r\n");
  79   2        }
  80   1        
  81   1        G_ServoPulCnt++;
  82   1        if(G_ServoPulCnt >= 200){
  83   2        
  84   2            G_ServoPulCnt = 0;
  85   2        }
  86   1      
  87   1      
  88   1      }
*** WARNING C280 IN LINE 48 OF driver\51\hw_pwm.c: 'timerx': unreferenced local variable
  89          
  90          
  91          void uartCmdProc(void *uartData)
  92          {
  93   1        static uint8 servoPulseWidth = 15;
  94   1        uint8 *command = (uint8 *)uartData;
  95   1        
  96   1        switch(*command){
  97   2        
  98   2          case 'f':
  99   2          {
 100   3              servoPulseWidth++;
 101   3              if(servoPulseWidth >= 25){
 102   4              
 103   4                servoPulseWidth = 25;
 104   4                setServoPulseWidth(servoPulseWidth);
 105   4              }
 106   3              resetServoPulCnt();
 107   3              break;
 108   3          }
 109   2          case 'g':
 110   2          {
 111   3              servoPulseWidth--;
 112   3              if(servoPulseWidth <= 5){
 113   4              
 114   4                servoPulseWidth = 5;
 115   4                setServoPulseWidth(servoPulseWidth);
C51 COMPILER V9.56.0.0   HW_PWM                                                            03/24/2019 22:53:31 PAGE 3   

 116   4              }
 117   3              resetServoPulCnt();
 118   3              break;
 119   3          }
 120   2          case 'k':
 121   2          {
 122   3              servoPulseWidth = 15;
 123   3              setServoPulseWidth(servoPulseWidth);
 124   3              resetServoPulCnt();
 125   3              break;
 126   3          }
 127   2          default:
 128   2          {
 129   3              break;
 130   3          }
 131   2        }
 132   1        
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    238    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
