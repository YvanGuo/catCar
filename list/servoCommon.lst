C51 COMPILER V9.56.0.0   SERVOCOMMON                                                       03/17/2019 14:30:49 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SERVOCOMMON
OBJECT MODULE PLACED IN .\list\servoCommon.obj
COMPILER INVOKED BY: E:\keil_c51\C51\BIN\C51.EXE hal\servoCommon.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\list\servoCommon.lst) TABS(2) OBJECT(.\list\servoCommon.obj)

line level    source

   1          
   2          #include "servoCommon.h"
   3          #include "pinCtl.h"
   4          #include "driver/51/hw_pwm.h"
   5          #include "timer.h"
   6          
   7          typedef struct s_ServoCfg{
   8              int16 pin;
   9              uint16 minPW;
  10              uint16 maxPW;
  11              int16 minAngle;
  12              int16 maxAngle;
  13          }s_ServoCfg;
  14          
  15          static s_ServoCfg G_ServoCfg = {-1, -1, -1, -1, -1};
  16          
  17          static void resetFields(void)
  18          {
  19   1        setServoPulseWidth(15);
  20   1        
  21   1      }
  22          
  23          uint16 servoReadMicroseconds()
  24          {
  25   1        
  26   1        return 0;
  27   1      }
  28          
  29          void servoWriteMicroseconds(uint16 pulseWidth)
  30          {
  31   1        
  32   1        setServoPulseWidth(pulseWidth);
  33   1        
  34   1      }
  35          
  36          int32 servoRead()
  37          {
  38   1        
  39   1        return 0;
  40   1      }
  41          
  42          
  43          void servoWrite(int32 angle)
  44          {
  45   1        uint16 pulseWidth = 5;
  46   1        
  47   1        if(angle < 0 || angle > 180){
  48   2        
  49   2          return;
  50   2        }
  51   1        
  52   1        pulseWidth = 5+angle/9;
  53   1        
  54   1        setServoPulseWidth(pulseWidth);
C51 COMPILER V9.56.0.0   SERVOCOMMON                                                       03/17/2019 14:30:49 PAGE 2   

  55   1      }
  56          
  57          int8 servoDetach()
  58          {
  59   1        pinMode_common(G_ServoCfg.pin, OUTPUT);
  60   1        G_ServoCfg.pin = NOT_ATTACHED;
  61   1        return 0;
  62   1      }
  63          
  64          int32 servoAttachedPin()
  65          { 
  66   1        return G_ServoCfg.pin; 
  67   1        
  68   1      }
  69          
  70          int16 servoAttached()
  71          { 
  72   1        return G_ServoCfg.pin != NOT_ATTACHED; 
  73   1      }
  74          
  75          int8 servoAttach(uint8 pin, uint16 minPulseWidth, uint16 maxPulseWidth, int16 minAngle, int16 maxAngle)
  76          {
  77   1        if(servoAttached()){
  78   2        
  79   2          //return 0;
  80   2        }
  81   1        
  82   1        G_ServoCfg.pin = pin;
  83   1        G_ServoCfg.minPW = minPulseWidth;
  84   1        G_ServoCfg.maxPW = maxPulseWidth;
  85   1        G_ServoCfg.minAngle = minAngle;
  86   1        G_ServoCfg.maxAngle = maxAngle;
  87   1        pinMode_common(pin, PWM);
  88   1        registTimerCbFun(TIMER_0, ServoPwmInterruptProc);
  89   1        timerxStart(TIMER_0);
  90   1        return 0;
  91   1      }
  92          
  93          void ServoDefaultInit()
  94          {
  95   1        if(servoAttached()){
  96   2        
  97   2          //return;
  98   2        }
  99   1        
 100   1        G_ServoCfg.pin = SERVO_CTL_PIN;
 101   1        G_ServoCfg.minPW = SERVO_DEFAULT_MIN_PW;
 102   1        G_ServoCfg.maxPW = SERVO_DEFAULT_MAX_PW;
 103   1        G_ServoCfg.minAngle = SERVO_DEFAULT_MIN_ANGLE;
 104   1        G_ServoCfg.maxAngle = SERVO_DEFAULT_MAX_ANGLE;
 105   1        pinMode_common(G_ServoCfg.pin, PWM);
 106   1        registTimerCbFun(TIMER_0, ServoPwmInterruptProc);
 107   1        timerxStart(TIMER_0);
 108   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    263    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.56.0.0   SERVOCOMMON                                                       03/17/2019 14:30:49 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
